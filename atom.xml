<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joy Chen</title><description>Joy Chen</description><link/><language>en</language><copyright>Copyright 2023, Ronalds Vilcins</copyright><lastBuildDate>Tue, 06 Jun 2023 00:00:00 +0000</lastBuildDate><generator>Hugo - gohugo.io</generator><docs>http://cyber.harvard.edu/rss/rss.html</docs><atom:link href="https://ronaldsvilcins.com/atom.xml" rel="self" type="application/atom+xml"/><item><title>Spending analytics</title><link>/2023/06/06/spendinganalytics/</link><description>&lt;h2 id="apps">Apps &lt;a href="#apps" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>By now, I&amp;rsquo;ve used four apps to track and manage my finances.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mint.intuit.com/">Mint&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://copilot.money/">Copilot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lunchmoney.app/">Lunch Money&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.monarchmoney.com/referral/m80icel1cq">Monarch Money&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Enough has been said about Mint. I used it because it was free. I left because the ads were annoying. I started using Copilot because it was beautiful and I&amp;rsquo;d gained appreciation for good software, enough to start paying for it. I used Lunch Money while using Copilot because I thought I wanted a stronger budgeting, category, and &lt;a href="https://lunchmoney.app/features/analytics">query&lt;/a> system. Lunch Money is by far the best of them all at delivering &lt;a href="https://lunchmoney.app/features/stats-trends">analytics and insights&lt;/a>.&lt;/p>
&lt;h2 id="monarch">Monarch &lt;a href="#monarch" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>This brings me to the current app I use for tracking my finances, Monarch. I switched from Copilot because I wanted better desktop support. The same month I switched, Copilot released a desktop version of their app&amp;hellip; That being said, I &lt;em>like&lt;/em> that Monarch&amp;rsquo;s mobile app has less information, less cluttered, and the desktop app has more information, evenly spaced. I also think Monarch&amp;rsquo;s &lt;a href="https://www.monarchmoney.com/features/recurring">recurring feature&lt;/a> is more intuitive. The calendar view is great for visualizing when exactly I get paid, when exactly I pay my Con-Ed and insurance bills. My main gripe with this feature is that you mark a merchant as recurring. That doesn&amp;rsquo;t make sense for some merchants that offer both recurring and one-time products, like my Apple iCloud and TV bills are recurring but my one-time in-app purchase is not.&lt;/p>
&lt;p>My favorite view is the &lt;a href="https://www.monarchmoney.com/features/spending">cash flow view&lt;/a>, which shows:&lt;/p>
&lt;ul>
&lt;li>Expenses and income broken down by category, sorted by amount&lt;/li>
&lt;li>Total sum of income&lt;/li>
&lt;li>Total sum of expenses&lt;/li>
&lt;li>How this month&amp;rsquo;s total income and expenses compare to the past 10 months&lt;/li>
&lt;/ul>
&lt;p>I find most apps take the budgeting approach to visualizing expenses, but I think there are two questions at hand here.&lt;/p>
&lt;ol>
&lt;li>How much money did you earn/spend?&lt;/li>
&lt;li>How does that map to your budget?&lt;/li>
&lt;/ol>
&lt;p>Most apps treat these as the same question. I like that Monarch treats them as two. It matches how I think about my finances.&lt;/p>
&lt;h2 id="analytics">Analytics &lt;a href="#analytics" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>This post was inspired by this tweet I saw. Someone was like, &amp;ldquo;someone should build ChatGPT for Mint&amp;rdquo; (something along those lines, not a direct quote). Their point was like, you should be able to ask &amp;ldquo;How much did I spend on restaurants in January?&amp;rdquo; and get a response.&lt;/p>
&lt;p>My initial reaction is I don&amp;rsquo;t think anybody would use it. I think people who already care enough to ask that question are using Mint, YNAB, or some other app that enables you to answer those kinds of questions already. In my case, I can filter transactions to Restaurants, set the date range to Jan 1-31, and Monarch sums the total for me. I can also download a CSV of all the transactions. I basically think the spreadsheet crew isn&amp;rsquo;t going to see value in &amp;ldquo;ChatGPT for finances&amp;rdquo; because it&amp;rsquo;s already low friction for them to answer the questions they have.&lt;/p>
&lt;p>I could be proven wrong here. To be honest, I thought the same about SQL. I thought nobody would ever adopt &amp;ldquo;ChatGPT for data analytics&amp;rdquo; because, in my mind, SQL isn&amp;rsquo;t &lt;em>that&lt;/em> hard to write. I mean, SQL is hard to write, yes, but I thought people would adopt query-writing helpers rather than completely replacing their workflow with natural language. I&amp;rsquo;m biased here because the company I work at has a big SQL-writing culture. Everyone I interact with, both engineers and non-engineers, has quite good SQL knowledge. At work, it&amp;rsquo;s a thing you learn if you don&amp;rsquo;t know it. Ultimately, both the SQL replacements and SQL helpers will probably have their place, although it&amp;rsquo;s still early.&lt;/p>
&lt;h2 id="some-transactions">Some transactions &lt;a href="#some-transactions" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>Another problem is people don&amp;rsquo;t know what questions they should be asking about their finances. I think that&amp;rsquo;s more along the lines of a personalized financial advisor (person or robot).&lt;/p>
&lt;p>Anyways, here are the answers to some random questions I came up with.&lt;/p>
&lt;ul>
&lt;li>The largest restaurant transaction ever charged to me was at &lt;a href="https://resy.com/cities/ny/oxomoco">Oxomoco&lt;/a> for a group of 5.&lt;/li>
&lt;li>The most I ever spent in a single transaction at a coffee shop was $21.83 on November 12, 2022 at &lt;a href="https://www.textbook.nyc/">Textbook&lt;/a>&lt;/li>
&lt;li>From September 27, 2021 to April 7, 2023, $404.16 in wine transactions were charged to my card (also much of it paid back via Venmo. I&amp;rsquo;m too lazy to properly map Venmo transactions to the original card transaction). One of these transactions is &lt;a href="http://www.californiawinemerchant.com/">California Wine Merchant&lt;/a> in the Marina in SF.&lt;/li>
&lt;/ul>
&lt;p>Every line item is backed by an unforgettable memory.&lt;/p></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>/2023/06/06/spendinganalytics/</guid><pubDate>Tue, 06 Jun 2023 00:00:00 +0000</pubDate></item><item><title>AI automates the boring code</title><link>/2023/06/03/aiautomatestheboringcode/</link><description>&lt;p>Recently, I was thinking about how people learn how to code. &lt;em>Automate the Boring Stuff with Python&lt;/em> is a book frequently recommended to people learning Python. It teaches you the basics of the language and how to do practical tasks. One of the first practical uses I had for writing Python scripts was scraping the used phone marketplace Swappa and emailing myself whenever a new listing was posted.&lt;/p>
&lt;p>Here are two true statements about that task.&lt;/p>
&lt;ul>
&lt;li>It&amp;rsquo;s precisely the kind of task &lt;em>Automate the Boring Stuff with Python&lt;/em> teaches you to do.&lt;/li>
&lt;li>Copilot can automate 70% of it.&lt;/li>
&lt;/ul>
&lt;h2 id="ai-automates-the-boring-code">AI automates the boring code &lt;a href="#ai-automates-the-boring-code" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>In my day job as a full-stack engineer, I would say Copilot only writes 10% of the code I write, and the code it automates is what I call &lt;em>boring code&lt;/em>. Here are some examples of boring code that Copilot can write.&lt;/p>
&lt;ul>
&lt;li>The sleep() function in JavaScript&lt;/li>
&lt;li>Import statements for generated types, API wrapper, and UI library [0]&lt;/li>
&lt;li>The boilerplate code to raise an error&lt;/li>
&lt;li>Ruby case statement with conditions already filled out given a &lt;a href="https://sorbet.org/docs/tenum">typed enum&lt;/a>&lt;/li>
&lt;li>Syntax things: for loops, if statements, function definitions&lt;/li>
&lt;li>&lt;a href="https://ruby-doc.org/stdlib-2.7.1/">Standard library&lt;/a> functions, especially useful since I work with dates and times a lot&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Here&amp;rsquo;s another claim: Software engineers don&amp;rsquo;t enjoy writing boring code.&lt;/strong>&lt;/p>
&lt;p>I recently saw a thread on Twitter claiming an engineer with many years of experience refused to use Copilot because he &amp;ldquo;really enjoys writing code.&amp;rdquo; There&amp;rsquo;re lots of strange threads on AI Twitter, so I shouldn&amp;rsquo;t be surprised. In any case, I find it hard to believe someone really enjoys looking up syntax and writing basic for loops.&lt;/p>
&lt;p>The engineers I know enjoy software engineering because it&amp;rsquo;s about solving problems. Writing code is a way to solve problems.&lt;/p>
&lt;p>Solving problems is the fun part.&lt;/p>
&lt;h2 id="an-example-problem">An example problem &lt;a href="#an-example-problem" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>Here is a real problem anyone who works for a Big Company can relate to that AI cannot solve [1]. Let&amp;rsquo;s say you&amp;rsquo;re doing an internal data model migration.&lt;/p>
&lt;p>To give a real example, let&amp;rsquo;s say you&amp;rsquo;re a clothing company that started out selling shirts. Your shirt product is represented in code as the &lt;code>Shirt&lt;/code> model. The &lt;code>Shirt&lt;/code> model has properties on it, like &lt;code>is_short_sleeve&lt;/code>, &lt;code>is_long_sleeve&lt;/code>, &lt;code>is_cropped&lt;/code>, and &lt;code>discount_rate&lt;/code> [2].&lt;/p>
&lt;p>However, now you want to expand your business, so you decide to clean up this code. You create a new model &lt;code>Product&lt;/code> for the next phase of your business, and you need to write a migration.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Software solves business problems.&lt;/strong> You&amp;rsquo;re in this situation because your code made assumptions about the business that no longer hold true. You&amp;rsquo;re remedying the situation to enable the business to grow.&lt;/li>
&lt;li>&lt;strong>AI can&amp;rsquo;t write the migration by itself&lt;/strong>. The fields on the &lt;code>Shirt&lt;/code> model don&amp;rsquo;t map 1:1 with the &lt;code>Product&lt;/code> model. You likely want to represent &lt;code>is_short_sleeve&lt;/code> and &lt;code>is_long_sleeve&lt;/code> differently on the new model. You might not want &lt;code>discount_rate&lt;/code> on the &lt;code>Product&lt;/code> itself; you could have a separate &lt;code>Promotion&lt;/code> model that defines the products included in the promotion.&lt;/li>
&lt;/ul>
&lt;h2 id="ai-helps-solve-problems">AI &lt;em>helps&lt;/em> solve problems &lt;a href="#ai-helps-solve-problems" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>In the example above, thinking about how you&amp;rsquo;re going to represent products for the next phase of your business, and how you&amp;rsquo;re going to migrate from &lt;code>Shirt&lt;/code> to &lt;code>Product&lt;/code> is the heavy lifting. You might bounce ideas off ChatGPT, but ultimately it&amp;rsquo;s up to you to determine the right solution. It&amp;rsquo;s your job to make the decision.&lt;/p>
&lt;p>Here&amp;rsquo;s a list of tasks I haven&amp;rsquo;t automated at my job.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Translating Figma designs to data flow&lt;/strong>. Often the designs are complex, involving many moving parts and separate API calls. If it were obvious where the data should be fetched, frontend would be much simpler. Instead, you often end up with very complex frontend code because it&amp;rsquo;s not componentized properly.&lt;/li>
&lt;li>&lt;strong>Technical design&lt;/strong>. There&amp;rsquo;s never one right answer. For any given problem, there might be 3 solutions I come up with, all with different pros and cons.&lt;/li>
&lt;li>&lt;strong>Making decisions&lt;/strong>. Once you&amp;rsquo;ve drafted the options, you have to pick one.&lt;/li>
&lt;li>&lt;strong>Code review&lt;/strong>. I can only point out potential bugs because I understand enough about the data models and interactions among them. Most things caught in code review aren&amp;rsquo;t syntax issues; the build system would have already caught syntax issues early.&lt;/li>
&lt;li>&lt;strong>Reasoning about the system&lt;/strong>. Software engineers all know how to write code, so writing code is never the hard part. The hard part is knowing what code to write. Reasoning about all the ways the system can break is the challenge.&lt;/li>
&lt;li>&lt;strong>Confirming your code solves the business problem&lt;/strong>. Ultimately, your job isn&amp;rsquo;t to write software because it&amp;rsquo;s fun but because it helps your employer create value.&lt;/li>
&lt;/ul>
&lt;p>There are more, but these are the ones that immediately come to mind. My job is mostly made up of these tasks that I can&amp;rsquo;t automate. I&amp;rsquo;m not opposed to using AI to help me automate them, but I&amp;rsquo;ve found so far the tools I&amp;rsquo;ve used aren&amp;rsquo;t sufficient for them. One way of interpreting this blog post is that AI is far from automating the job of a software engineer. Another way is seeing it as a list of problems that would be exciting to solve.&lt;/p>
&lt;hr>
&lt;p>[0] At the Big Company I work for, there&amp;rsquo;re very specific ways of doing certain things, but Copilot can more or less infer based on the files I
have open in my editor, even though we&amp;rsquo;re not using public libraries.&lt;/p>
&lt;p>[1] If you don&amp;rsquo;t find it relatable, I&amp;rsquo;m surprised and also curious to hear about your experience. Perhaps the example provided is too simple, but the shape of the problem is common based on conversations I&amp;rsquo;ve had with my friends at other companies.&lt;/p>
&lt;p>[2] You might ask, how did it make sense at the time to keep adding these properties to the model? There are a couple plausible explanations. 1) Your shirt company was trying to move fast, and you ended up in this situation. 2) It was your developer&amp;rsquo;s first project, and they weren&amp;rsquo;t experienced enough to know better. In any case, it doesn&amp;rsquo;t help to dwell on why someone else wrote the code a certain way but focus on what you&amp;rsquo;re gonna do about and prevent it from happening in the future.&lt;/p></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>/2023/06/03/aiautomatestheboringcode/</guid><pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate></item><item><title>How I learned to ride a bike</title><link>/2023/05/19/rideabike/</link><description>&lt;h2 id="first-attempt">First attempt &lt;a href="#first-attempt" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>When I was 8, my parents tried to teach me to ride a bike. I started with training wheels. One day, I fell off my bike (with training wheels), and the wound took a month to heal. I never rode that bike again.&lt;/p>
&lt;h2 id="second-attempt">Second attempt &lt;a href="#second-attempt" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>My freshman year of college, my friends and I were walking around campus at midnight. Specifcially, we were in between the Physical Sciences Building and Klarman Hall. This was 2018, when &lt;a href="https://www.ithaca.com/news/ithaca/update-lime-bike-leaves-ithaca-permanently/article_eba1365c-a67f-11ea-8109-f78b29df1be2.html">Lime Bike was still in Ithaca&lt;/a>. We spotted a bike on the sidewalk and decided to use it. If you&amp;rsquo;re familiar with PSB, you know it&amp;rsquo;s on top of a hill, and my friends took turns riding up and down the hill. They came back to the sidewalk and told me it&amp;rsquo;s not that hard to ride a bike, so I gave it a shot (on the sidewalk, not the hill). I was able to steadily ride the bike for, a minute? But, it didn&amp;rsquo;t stick.&lt;/p>
&lt;h2 id="third-attempt">Third attempt &lt;a href="#third-attempt" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>Summer of 2019, I was in Beijing. My friends and I were in &lt;a href="https://en.wikipedia.org/wiki/Wudaokou">Wudaokou&lt;/a>, and they wanted to bike to the &lt;a href="https://en.wikipedia.org/wiki/Beijing_National_Stadium">Bird&amp;rsquo;s Nest&lt;/a>. To give you an idea of how long that would take, the distance is around 3 miles or 5 km. I was a little scared, but I figured I could learn along the way. My friends had trouble describing how to ride the bike to me, but if I didn&amp;rsquo;t figure it out, I would have been left behind. I kept trying to &amp;ldquo;balance while moving&amp;rdquo; as someone described it, and eventually I got the hang of it. And then I learned what everyone meant when they said you learn it once and never forget it.&lt;/p>
&lt;p>That&amp;rsquo;s how I learned to ride a bike the summer of 2019 in Beijing.&lt;/p></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>/2023/05/19/rideabike/</guid><pubDate>Fri, 19 May 2023 00:00:00 +0000</pubDate></item><item><title>My favorite songs in Mandarin</title><link>/2023/05/17/favoritemandopopsongs/</link><description>&lt;p>I&amp;rsquo;m a firm believer that most people&amp;rsquo;s favorite songs were simply there for them at &lt;a href="/2023/05/14/timeplace20230514/">the right place and right time&lt;/a> in their lives. I&amp;rsquo;m no different. At this point, I think my list of all-time favorite Mandopop songs is almost set in stone.&lt;/p>
&lt;h2 id="dont-break-my-heart">Don&amp;rsquo;t Break my Heart &lt;a href="#dont-break-my-heart" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I like that it&amp;rsquo;s an upbeat rock song. I first heard it in a &lt;a href="https://en.wikipedia.org/wiki/Summer_Palace_(2006_film)">movie about Beijing&lt;/a> while living in Beijing (and Dou Wei is from Beijing). All in all, it reminds me a lot of Beijing.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/emBNp2TvPR8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="童年">童年 &lt;a href="#%e7%ab%a5%e5%b9%b4" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I like singing this at karaoke as an adult because it reminds me of how simple things were when I was a kid, and it&amp;rsquo;s like, there&amp;rsquo;s no reason my life can&amp;rsquo;t be that simple now. That was also back when we had blackboards. Now they&amp;rsquo;re all dry erase.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/mRKTOZmX2cE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="爱人错过">爱人错过 &lt;a href="#%e7%88%b1%e4%ba%ba%e9%94%99%e8%bf%87" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>They have the most interesting new music.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/6D79CYTxvOM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="我是不是你最疼爱的人">我是不是你最疼爱的人 &lt;a href="#%e6%88%91%e6%98%af%e4%b8%8d%e6%98%af%e4%bd%a0%e6%9c%80%e7%96%bc%e7%88%b1%e7%9a%84%e4%ba%ba" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I found the emotion in this song easy to understand. Xuan Xuan&amp;rsquo;s cover will always be the best version to me.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/x-pb5MEqFcM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="夜空中最亮的心">夜空中最亮的心 &lt;a href="#%e5%a4%9c%e7%a9%ba%e4%b8%ad%e6%9c%80%e4%ba%ae%e7%9a%84%e5%bf%83" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>You know that one Chinese song that sounds like Coldplay but isn&amp;rsquo;t. I&amp;rsquo;ve replayed it a million times though.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/GPnymcrXgX0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="也罢">也罢 &lt;a href="#%e4%b9%9f%e7%bd%a2" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I like how she sings with emotion so effortlessly, and it feels genuine, not overdone.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/1oxh4cGQJHQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="静止">静止 &lt;a href="#%e9%9d%99%e6%ad%a2" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>All around extremely underrated.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/uwL23suAKm0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="思念是一种病">思念是一种病 &lt;a href="#%e6%80%9d%e5%bf%b5%e6%98%af%e4%b8%80%e7%a7%8d%e7%97%85" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I first heard &lt;a href="https://www.youtube.com/watch?v=y3U2y2G316E">Robynn &amp;amp; Kendy&amp;rsquo;s cover&lt;/a> of this song on the third season of The Voice of China. When they transitioned to &amp;ldquo;Where is the Love&amp;rdquo; I thought it was one of the best auditions I&amp;rsquo;d ever seen on the show. I love the original too. It&amp;rsquo;s a classic.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/9ei1PUmDz98" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="无常">无常 &lt;a href="#%e6%97%a0%e5%b8%b8" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Fuzao">Fuzao&lt;/a> is Faye Wong&amp;rsquo;s best album.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Jna0kNZofbQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="千里之外">千里之外 &lt;a href="#%e5%8d%83%e9%87%8c%e4%b9%8b%e5%a4%96" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>My dad would play &lt;a href="https://en.wikipedia.org/wiki/Still_Fantasy">Still Fantasy&lt;/a> all the time in the car growing up. It remains my favorite Jay Chou album to this day.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ocDo3ySyHSI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="春天里">春天里 &lt;a href="#%e6%98%a5%e5%a4%a9%e9%87%8c" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I like all of Wang Feng&amp;rsquo;s popular songs. They sound nice.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4RgAajuqPug" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="太阳">太阳 &lt;a href="#%e5%a4%aa%e9%98%b3" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>No, not &lt;a href="https://www.youtube.com/watch?v=7vlVjfMl_Nk">that one&lt;/a>. Not &lt;a href="https://www.youtube.com/watch?v=tv95k0zqnaA">her other song&lt;/a>, or &lt;a href="https://www.youtube.com/watch?v=OZXy0t2i21A">the other one&lt;/a>.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/fRcqZqi56Ws" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="无与伦比的美丽">无与伦比的美丽 &lt;a href="#%e6%97%a0%e4%b8%8e%e4%bc%a6%e6%af%94%e7%9a%84%e7%be%8e%e4%b8%bd" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>。&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/NA4otP-v6iI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="大艺术家">大艺术家 &lt;a href="#%e5%a4%a7%e8%89%ba%e6%9c%af%e5%ae%b6" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>It&amp;rsquo;s a really good pop song.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/bWx-vtCSg0w" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="日常">日常 &lt;a href="#%e6%97%a5%e5%b8%b8" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I like songs about living life. &amp;ldquo;&lt;a href="https://youtu.be/Y-l8vok_tUE">To Hebe&lt;/a>&amp;rdquo; is good in that regard too.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/3dBFK2fHjWg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="假装我们没爱过">假装我们没爱过 &lt;a href="#%e5%81%87%e8%a3%85%e6%88%91%e4%bb%ac%e6%b2%a1%e7%88%b1%e8%bf%87" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>I feel like this song was lost to time. I also like &lt;a href="https://youtu.be/6b1cikZ8AvU">that one Fahrenheit song with the MV set in the desert&lt;/a> (?). That one is more famous.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/XAlypUCW1VQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;h2 id="牡丹江">牡丹江 &lt;a href="#%e7%89%a1%e4%b8%b9%e6%b1%9f" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>You know when you listen to a song about a place, and even though you&amp;rsquo;ve never been there, you can feel how deeply the person who wrote the song feels about that place.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/nEKJGhoGH3Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>/2023/05/17/favoritemandopopsongs/</guid><pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate></item><item><title>Documentation as a value add</title><link>/2023/05/15/documentationasvalueadd20230515/</link><description>&lt;p>These are my quick thoughts after writing&amp;hellip; a single page of docs. Grain of salt disclaimer.&lt;/p>
&lt;h2 id="documentation-as-a-project">Documentation as a project &lt;a href="#documentation-as-a-project" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>Documentation is a never-ending project. The first questions you should ask with any project are: Do I need to do it? What value does it add? Applied to documentation, you can ask:&lt;/p>
&lt;ul>
&lt;li>Does my tool &lt;em>need&lt;/em> good documentation?&lt;/li>
&lt;li>What value does good documentation add to my tool?&lt;/li>
&lt;/ul>
&lt;p>I don&amp;rsquo;t think the answers to these questions are obvious. There are a lot of tools in our lives we use simply because they&amp;rsquo;re the only option, not because they&amp;rsquo;re easy to use. If you&amp;rsquo;re the only provider of internet payments APIs in the market, maybe you&amp;rsquo;re okay with having subpar documentation, but you can quickly think of a few reasons to improve it:&lt;/p>
&lt;ol>
&lt;li>A young upstart might come around with better documentation, leading potential customers to choose them over you.&lt;/li>
&lt;li>You can reduce go-live time for your customers.&lt;/li>
&lt;li>You can establish trust with your customers and build relationships that compound over time as you develop new products.&lt;/li>
&lt;/ol>
&lt;p>All this is to say I understand why some companies choose not to invest in improving their documentation, but the investment certainly makes sense for some.&lt;/p>
&lt;h2 id="documentation-as-code">Documentation as code &lt;a href="#documentation-as-code" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>My employer treats documentation with a similar rigor to code:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://twitter.com/jhzc_/status/1658270046202781696">Documentation linting rules&lt;/a> catch spelling mistakes, broken links, common language style mistakes (passive voice, confusing words like &amp;ldquo;once&amp;rdquo;), missing glossary definitions (&amp;ldquo;webhook&amp;rdquo;), and more.&lt;/li>
&lt;li>We think about the &lt;a href="https://blog.hubspot.com/website/information-architecture">information architecture&lt;/a> of our docs, like you might think of a system design architecture before writing code.&lt;/li>
&lt;li>Documentation goes through technical writing review.&lt;/li>
&lt;/ol>
&lt;h2 id="documentation-as-a-value-add">Documentation as a value add &lt;a href="#documentation-as-a-value-add" class="hash g">#&lt;/a>&lt;/h2>
&lt;p>My employer is the first example people point to as an example of investment in documentation paying dividends over time. Having spent a lot of time reading our docs, there are a few things I can&amp;rsquo;t help but notice when I read the docs for other developer-focused projects.&lt;/p>
&lt;ol>
&lt;li>Some projects &lt;strong>over-invest in feature docs and under-invest in solution docs&lt;/strong>. They describe what x is but not how to use it. People visit your docs with a goal in mind, and your mission is to help them achieve it.&lt;/li>
&lt;li>Some people &lt;strong>brain dump&lt;/strong> when they write docs. Every doc needs a thesis statement to orient its direction. Only include details that advance the user towards that goal.&lt;/li>
&lt;li>&lt;strong>Why use many word when few word do trick&lt;/strong>. Some docs could use editing for brevity. Reading convoluted sentences takes a toil on the tired developer&amp;rsquo;s mind. The easiest example is the words &amp;ldquo;very&amp;rdquo; and &amp;ldquo;really&amp;rdquo; [0].&lt;/li>
&lt;li>When &lt;strong>documentation is an after-thought&lt;/strong>, it&amp;rsquo;s apparent in the developer experience. If you don&amp;rsquo;t build your product ground up from the perspective of how a developer would use it, you notice when it&amp;rsquo;s hard to document. After all, documenting is just describing to a developer how they use your product.&lt;/li>
&lt;/ol>
&lt;p>Recently, I&amp;rsquo;ve seen a lot of AI tools to summarize documentation on Twitter. While those tools are no doubt useful, I think there&amp;rsquo;s potential in tools to help &lt;em>write&lt;/em> documentation. I want to see an AI tool that takes a 20-step brain dump guide and converts it to a 5-step MVP tutorial.&lt;/p>
&lt;p>If you want to make documentation a differentiating point for your product, I think it&amp;rsquo;s first and foremost about the content.&lt;/p>
&lt;p>How do you know if the content is valuable? Read it.&lt;/p>
&lt;p>AI can help you write and edit, but the ultimate test of your docs is if&lt;/p>
&lt;ol>
&lt;li>A human understands them.&lt;/li>
&lt;li>A human can use your product to build something that generates value.&lt;/li>
&lt;/ol>
&lt;p>That is, until AI can replace my job as a developer (I don&amp;rsquo;t think it&amp;rsquo;s there quite yet).&lt;/p>
&lt;hr>
&lt;p>[0] I&amp;rsquo;m allowed to use them on my blog, however, because my personal voice can creep in my blog because it&amp;rsquo;s my blog.&lt;/p></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>/2023/05/15/documentationasvalueadd20230515/</guid><pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate></item><item><title>Songs that remind you of a time and place</title><link>/2023/05/14/timeplace/</link><description>&lt;p>In December 2019, I started compiling monthly playlists. The goal was to create a kind of musical diary, a playlist for a specific time in my life. It&amp;rsquo;s fun to reflect on songs that you listen to, and the memories just all come back to you. This is something I&amp;rsquo;ve noted to myself in my head for a while, although I wish I&amp;rsquo;d started creating playlists earlier.&lt;/p>
&lt;p>June 2012, sitting in my uncle&amp;rsquo;s car as we drove from Yizhuang to the city center.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/YwsjsiJZ1Ro" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;p>September 2016, on the bus to school, I listened to this album every day for a week straight.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/mnywpd8VRVo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/uwyWMhb0nlU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;p>August 2019, in the cab home after a night out in Sanlitun.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/eSf9G5x7rMI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;p>March 2020, on the bus to the airport after my college announced classes were suspended:&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/UAsTlnjvetI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/kTHhOQJRHNU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;p>December 2021, when I graduated college.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Kwalypwvd8I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;p>February 2022, when I moved to NYC.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DoJHmQsu9x8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/BiiwclhI5Y8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe>
&lt;p>August 2022, driving down the Pacific Coast Highway on the way from Malibu to Santa Monica.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/HYrxGEt9czo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>&lt;/iframe></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>/2023/05/14/timeplace/</guid><pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate></item><item><title>Every match I watched in person at the US Open</title><link>/2022/09/13/usopen/</link><description>&lt;h3 id="2021">2021 &lt;a href="#2021" class="hash g">#&lt;/a>&lt;/h3>
&lt;p>Fall break in NYC! Went back to Ithaca, then drove back down again for the final.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1eo0_wKg1Wg">Carlos Alcaraz vs Stefanos Tsitsipas | 2021 US Open Round 3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=apUw33XYUPM">Leylah Fernandez vs Naomi Osaka | 2021 US Open Round 3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=XWifULrlOMI">Mixed Doubles Final | Krawczyk/Salisbury vs Olmos/Arevalo | 2021 US Open&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=hRydTS4kCaE">Emma Raducanu vs Leylah Fernandez Highlights | 2021 US Open Final&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="2022">2022 &lt;a href="#2022" class="hash g">#&lt;/a>&lt;/h3>
&lt;p>No more driving 5 hours upstate!&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=xHTSnwnuqZc">Hradecka/Noskova vs. Williams/Williams | 2022 US Open Round 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=6bSgWQr0PbE">Fabio Fognini vs. Rafael Nadal | 2022 US Open Round 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=cQLVPsIOzUA">Petra Kvitova vs. Jessica Pegula | 2022 US Open Round 4&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=DHYjbeffHDo">Frances Tiafoe vs. Rafael Nadal | 2022 US Open Round 4&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=w4Y1pDBtmQE">Iga Swiatek vs. Jule Niemeier | 2022 US Open Round 4&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=SQqISNJnVpg">Victoria Azarenka vs. Karolina Pliskova | 2022 US Open Round 4&lt;/a>&lt;/li>
&lt;/ul></description><author>ronalds.vilcins@gmail.com (Ronalds Vilcins)</author><guid>/2022/09/13/usopen/</guid><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate></item></channel></rss>